[
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.MDCConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAnyGetter",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAnySetter",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonCreator",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonGetter",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonPropertyOrder",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSetter",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonTypeInfo",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonUnwrapped",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonValue",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonView",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.PropertyAccessor"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonParser$Feature"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.MapperFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry[]"
  },
  {
    "name": "groovy.text.markup.MarkupTemplateEngine"
  },
  {
    "name": "java.io.Serializable",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.io.Serializable[]"
  },
  {
    "name": "java.lang.CharSequence[]"
  },
  {
    "name": "java.lang.Comparable",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Comparable[]"
  },
  {
    "name": "java.lang.Enum",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Long",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Number",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.String",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.annotation.Annotation",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.constant.Constable",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.math.BigDecimal",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Array",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Blob",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Clob",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Connection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.DatabaseMetaData",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getDatabaseProductName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.sql.Date",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.NClob",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Ref",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.ResultSet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.ResultSetMetaData",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.RowId",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.RowIdLifetime"
  },
  {
    "name": "java.sql.SQLWarning",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.SQLXML",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Statement",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Statement[]"
  },
  {
    "name": "java.sql.Time",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Timestamp",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.LocalDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.EventListener",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.HashMap",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "threshold",
        "allowUnsafeAccess": true
      },
      {
        "name": "loadFactor",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.util.LinkedHashSet",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.Properties"
  },
  {
    "name": "java.util.Set",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.TimeZone"
  },
  {
    "name": "java.util.concurrent.Callable",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.CopyOnWriteArrayList",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "lock",
        "allowWrite": true,
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.util.concurrent.Executor"
  },
  {
    "name": "java.util.concurrent.ScheduledExecutorService"
  },
  {
    "name": "java.util.logging.LogManager",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.annotation.PostConstruct",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Resource",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Column",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Entity",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.persistence.EntityManager",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.EntityManagerFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.GeneratedValue",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Id",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.InheritanceType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.JoinColumn",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.ManyToOne",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.MappedSuperclass",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.OneToMany",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.OneToOne",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.PersistenceContext",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Table",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.TableGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "javax.persistence.Transient",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.Filter",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.GenericServlet",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.MultipartConfigElement",
    "allDeclaredConstructors": true
  },
  {
    "name": "javax.servlet.Servlet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.ServletConfig",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.ServletRegistration"
  },
  {
    "name": "javax.servlet.ServletRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.ServletRequestWrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.ServletResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.http.HttpServlet",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.http.HttpServletRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.http.HttpServletRequestWrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.http.HttpServletResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.sql.XADataSource"
  },
  {
    "name": "javax.transaction.Transaction"
  },
  {
    "name": "javax.transaction.TransactionManager"
  },
  {
    "name": "javax.transaction.Transactional",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.Validator"
  },
  {
    "name": "javax.validation.ValidatorFactory",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.bootstrap.GenericBootstrap",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.AssertFalse",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.AssertTrue",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.DecimalMax",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.DecimalMin",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Digits",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Email",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Future",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.FutureOrPresent",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Max",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Min",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Negative",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.NegativeOrZero",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.NotBlank",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.NotEmpty",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.NotNull",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Null",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Past",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.PastOrPresent",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Pattern",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Positive",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.PositiveOrZero",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.Size",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.executable.ExecutableValidator"
  },
  {
    "name": "javax.websocket.server.ServerContainer"
  },
  {
    "name": "kotlin.KotlinVersion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "kotlin.KotlinVersion$Companion",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "kotlin.Metadata",
    "allDeclaredMethods": true
  },
  {
    "name": "kotlin.coroutines.Continuation",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "allDeclaredConstructors": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.coyote.AbstractProtocol",
    "methods": [
      {
        "name": "getLocalPort",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.coyote.UpgradeProtocol"
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.http.client.HttpClient",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.message.ParameterizedMessageFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.message.ReusableMessageFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.util.descriptor.web.ErrorPage",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsContextListener",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsSci"
  },
  {
    "name": "org.aspectj.lang.annotation.Around",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.aspectj.weaver.Advice"
  },
  {
    "name": "org.hibernate.Session",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.DynamicUpdate",
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.Tuplizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.annotations.common.util.impl.Log",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.common.util.impl.Log_$logger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.cache.spi.access.CollectionDataAccess",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.cfg.beanvalidation.TypeSafeActivator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.Managed",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.ManagedEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.PersistentAttributeInterceptable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.SelfDirtinessTracker",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.SessionImplementor"
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.event.spi.AutoFlushEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.ClearEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.DeleteEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.DirtyCheckEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.EventType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.event.spi.EventType[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.EvictEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.FlushEntityEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.FlushEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.InitializeCollectionEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.LoadEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.LockEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.MergeEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PersistEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostCollectionRecreateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostCollectionRemoveEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostCollectionUpdateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostDeleteEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostInsertEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostLoadEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PostUpdateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PreCollectionRecreateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PreCollectionRemoveEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PreCollectionUpdateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PreLoadEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.PreUpdateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.RefreshEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.ReplicateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.ResolveNaturalIdEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.event.spi.SaveOrUpdateEventListener[]",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.antlr.HqlTokenTypes",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.antlr.SqlTokenTypes",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.HqlToken",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AbstractNullnessCheckNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AbstractStatement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AggregateNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AggregatedSelectExpression",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.AssignmentSpecification",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BinaryOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CastFunctionNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CollectionFunction",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CollectionPathNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CollectionPropertyReference",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CollectionSizeNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ComponentJoin",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ConstructorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CountNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.DeleteStatement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.DisplayableNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.DotNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ExpectedTypeAwareNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromClause",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromElement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromElementFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromReferenceNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FunctionNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IdentNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ImpliedFromElement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.InLogicOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IndexNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.InitializeableNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.InsertStatement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IntoClause",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IsNotNullLogicOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IsNullLogicOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.JavaConstantNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.LiteralNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.MapEntryNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.MapKeyNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.MapValueNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.MethodNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.Node",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.NullNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.OperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.OrderByClause",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ParameterContainer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ParameterNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.PathNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.QueryNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ResolvableNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.RestrictableStatement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ResultVariableRefNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SearchedCaseNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SelectClause",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SelectExpression",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SelectExpressionImpl",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SelectExpressionList",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SessionFactoryAwareNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SimpleCaseNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SqlFragment",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SqlNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.Statement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.TableReferenceNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.UnaryOperatorNode",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.UpdateStatement",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.Assigned",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.ForeignGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.GUIDGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.IdentityGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.IncrementGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.SelectGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.SequenceHiLoGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.SequenceIdentityGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.UUIDGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.UUIDHexGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.id.enhanced.SequenceStyleGenerator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.internal.SessionImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.jpa.HibernateEntityManager",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.jpa.HibernateEntityManagerFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.mapping.PersistentClass",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.persister.collection.BasicCollectionPersister",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.collection.OneToManyPersister",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.entity.JoinedSubclassEntityPersister",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.entity.UnionSubclassEntityPersister",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.persister.spi.PersisterCreationContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.query.spi.QueryImplementor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRendererTokenTypes",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.tuple.component.DynamicMapComponentTuplizer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.tuple.component.PojoComponentTuplizer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.tuple.entity.AbstractEntityTuplizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.tuple.entity.EntityTuplizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.tuple.entity.PojoEntityTuplizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.type.EnumType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.HibernateValidatorConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.constraints.Length",
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.constraintvalidation.HibernateConstraintValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.constraintvalidators.RegexpURLValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.AbstractEmailValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.AssertFalseValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.AssertTrueValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.EmailValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotBlankValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NullValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.PatternValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArray",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfBoolean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfChar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfInt",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCollection",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForMap",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMaxValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMinValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.AbstractDecimalMaxValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.AbstractDecimalMinValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForBigDecimal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForBigInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForInteger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForNumber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArray",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfBoolean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfByte",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfChar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfDouble",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfFloat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfInt",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfLong",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfShort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCharSequence",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCollection",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForMap",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.AbstractEpochBasedTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.AbstractInstantBasedTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.AbstractJavaTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.AbstractFutureEpochBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.AbstractFutureInstantBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.AbstractFutureJavaTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForCalendar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForHijrahDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForInstant",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForJapaneseDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForMinguoDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForMonthDay",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForOffsetDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForOffsetTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForThaiBuddhistDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForYear",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForYearMonth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForZonedDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.AbstractFutureOrPresentEpochBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.AbstractFutureOrPresentInstantBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.AbstractFutureOrPresentJavaTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForCalendar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForHijrahDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForInstant",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForJapaneseDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForMinguoDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForMonthDay",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForOffsetDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForOffsetTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForThaiBuddhistDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForYear",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForYearMonth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForZonedDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.AbstractPastEpochBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.AbstractPastInstantBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.AbstractPastJavaTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForCalendar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForHijrahDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForInstant",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForJapaneseDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForMinguoDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForMonthDay",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForOffsetDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForOffsetTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForThaiBuddhistDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForYear",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForYearMonth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForZonedDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.AbstractPastOrPresentEpochBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.AbstractPastOrPresentInstantBasedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.AbstractPastOrPresentJavaTimeValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForCalendar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForHijrahDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForInstant",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForJapaneseDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForMinguoDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForMonthDay",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForOffsetDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForOffsetTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForThaiBuddhistDate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForYear",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForYearMonth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForZonedDateTime",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.CodePointLengthValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.EANValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.EmailValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.ISBNValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.LengthValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.LuhnCheckValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.Mod10CheckValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.Mod11CheckValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.NormalizedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.NotBlankValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.URLValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.UniqueElementsValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.br.CNPJValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.br.CPFValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.NIPValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.PESELValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.PolishNumberValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.REGONValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.time.DurationMaxValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.time.DurationMinValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.TraversableResolvers",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.xml.config.ValidationBootstrapParameters",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.messageinterpolation.AbstractMessageInterpolator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.resourceloading.PlatformResourceBundleLocator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.ExtendedBeanInfoFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ObjectFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ObjectProvider",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.AutowireCapableBeanFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ImportAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$ConfigAvailableCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.HazelcastJCacheCustomizationConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$CustomJCacheCacheManager",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheAvailableCondition$JCacheProvider",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$JCacheProviderAvailableCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.AbstractNestedCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.AnyNestedCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.NoneNestedConditions",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnJndiCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ResourceCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SpringBootCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceProperties",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition$DeferredBootstrapMode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition$LazyBootstrapMode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar$EnableJpaRepositoriesConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration$GroovyWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition$ExplicitType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition$PooledDataSourceAvailable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$InitializationSpecificCredentialsDataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$InitializationSpecificCredentialsDataSourceInitializationConfiguration$DifferentCredentialsCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$InitializationSpecificCredentialsDataSourceInitializationConfiguration$DifferentCredentialsCondition$DataCredentials",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$InitializationSpecificCredentialsDataSourceInitializationConfiguration$DifferentCredentialsCondition$SchemaCredentials",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration$DataSourceInitializationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.EmbeddedDataSourceConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryDependsOnPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition$Beans",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition$Classes",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition$RSocketSecurityEnabledCondition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition$ReactiveWebApplicationCondition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.WebSecurityEnablerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.DefaultCookieSerializerCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.HazelcastSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcSessionConfiguration$SpringBootJdbcHttpSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcSessionDataSourceInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcSessionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.MongoSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.MongoSessionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.NoOpSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.RedisSessionConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.RedisSessionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.RedisSessionProperties$ConfigureAction"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.ServletSessionCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$AbstractSessionRepositoryImplementationValidator",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$AbstractSessionRepositoryValidator",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$DefaultCookieSerializerCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$DefaultCookieSerializerCondition$CookieHttpSessionIdResolverAvailable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$DefaultCookieSerializerCondition$NoComponentsAvailable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$RememberMeServicesConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfigurationImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$SessionConfigurationImportSelector",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.StoreType"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.AtomikosJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Content",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties$Strategy",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$LocaleResolver"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.OnWsdlLocationsCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration$WsConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration$WsdlDefinitionBeanFactoryPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.WebServicesProperties",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.WebServicesProperties$Servlet",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.TypeExcludeFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.annotation.DeterminableImports",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation[]"
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesScan",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConstructorBinding",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.BuildProperties",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.info.GitProperties",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.DataSourceInitializationMode"
  },
  {
    "name": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.XADataSourceWrapper"
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.origin.OriginProvider[]"
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationMode"
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener$PostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.jdbc.JdbcTest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.jdbc.JdbcTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.jdbc.JdbcTypeExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.json.JsonTest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.json.JsonTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.json.JsonTypeExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.restdocs.RestDocsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.client.WebClientRestTemplateAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTypeExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.WebServiceClientExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.WebServiceClientTemplateAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.WebServiceClientTest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.WebServiceClientTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.context.ImportsContextCustomizer$ImportsCleanupPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.context.ImportsContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.context.SpringBootContextLoader",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.context.SpringBootTest",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.context.SpringBootTestContextBootstrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer$TestRestTemplateFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer$TestRestTemplateRegistrar",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer$WebTestClientFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer$WebTestClientRegistrar",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Shutdown"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ClientAuth"
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType"
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes"
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$SessionTrackingMode"
  },
  {
    "name": "org.springframework.boot.web.servlet.server.SessionStoreDirectory",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.webservices.client.WebServiceTemplateBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.Cache"
  },
  {
    "name": "org.springframework.cache.CacheManager"
  },
  {
    "name": "org.springframework.cache.concurrent.ConcurrentMapCacheManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport"
  },
  {
    "name": "org.springframework.cache.support.NoOpCacheManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.support.SimpleCacheManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationContext",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSource",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AdviceModeImportSelector",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationConfigApplicationContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Condition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMetadataReaderFactory",
        "parameterTypes": [
          "org.springframework.core.type.classreading.MetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.DeferredImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.EnableAspectJAutoProxy",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.FilterType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportBeanDefinitionRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.i18n.LocaleContextHolder"
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy"
  },
  {
    "name": "org.springframework.core.Ordered",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered"
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AnnotationAttributes"
  },
  {
    "name": "org.springframework.core.annotation.AnnotationAttributes[]"
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.TypeMappedAnnotation[]"
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]"
  },
  {
    "name": "org.springframework.core.io.Resource"
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
  },
  {
    "name": "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.PagedResourcesAssemblerArgumentResolver"
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.HateoasAwareSpringDataWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.QuerydslWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.HttpEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.MediaType",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.ResponseEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.http.client.HttpComponentsClientHttpRequestFactory",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.FormHttpMessageConverter",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations"
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jdbc.datasource.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.lang.Nullable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean"
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter"
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.vendor.Database"
  },
  {
    "name": "org.springframework.oxm.Marshaller"
  },
  {
    "name": "org.springframework.oxm.Unmarshaller"
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler"
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AbstractAuthenticationToken",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AccountExpiredException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationServiceException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.BadCredentialsException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.CredentialsExpiredException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.DisabledException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.LockedException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderNotFoundException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ReactiveAuthenticationManager"
  },
  {
    "name": "org.springframework.security.authentication.UsernamePasswordAuthenticationToken",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurerAdapter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.WebSecurityConfigurer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer$JwtConfigurer"
  },
  {
    "name": "org.springframework.security.config.http.SessionCreationPolicy"
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.core.AuthenticatedPrincipal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.MapReactiveUserDetailsService"
  },
  {
    "name": "org.springframework.security.core.userdetails.ReactiveUserDetailsService"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetails",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.provisioning.InMemoryUserDetailsManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.test.context.support.ReactorContextTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.AuthenticationEntryPoint",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandler",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.access.expression.WebSecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.RememberMeServices"
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessHandler",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
  },
  {
    "name": "org.springframework.session.FlushMode"
  },
  {
    "name": "org.springframework.session.SaveMode"
  },
  {
    "name": "org.springframework.session.Session"
  },
  {
    "name": "org.springframework.session.SessionRepository"
  },
  {
    "name": "org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.session.jdbc.JdbcIndexedSessionRepository",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration$SessionCleanupConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.session.web.http.CookieHttpSessionIdResolver"
  },
  {
    "name": "org.springframework.session.web.http.CookieSerializer"
  },
  {
    "name": "org.springframework.session.web.http.DefaultCookieSerializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.session.web.http.HttpSessionIdResolver"
  },
  {
    "name": "org.springframework.session.web.http.SessionEventHttpSessionListenerAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.session.web.http.SessionRepositoryFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.stereotype.Component",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.BootstrapWith",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.event.ApplicationEventsTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.event.EventPublishingTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.jdbc.Sql",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.jdbc.SqlGroup",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.jdbc.SqlMergeMode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.junit.jupiter.SpringExtension",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.support.DefaultBootstrapContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.support.DirtiesContextTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.support.DynamicPropertiesContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.transaction.TransactionalTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.web.ServletTestExecutionListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.test.context.web.WebAppConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager"
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.aspectj.AnnotationTransactionAspect",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.aspectj.AspectJJtaTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.aspectj.AspectJTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.aspectj.JtaAnnotationTransactionAspect",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor$1",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionalOperator"
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations"
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.util.unit.DataSize"
  },
  {
    "name": "org.springframework.validation.DefaultMessageCodesResolver$Format"
  },
  {
    "name": "org.springframework.validation.Validator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.InitBinder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ModelAttribute",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PatchMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PutMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestHeader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod[]",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.client.RestTemplate"
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.request.RequestContextListener"
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.filter.FormContentFilter"
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.HiddenHttpMethodFilter"
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.multipart.commons.CommonsMultipartResolver"
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceView",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.view.UrlBasedViewResolver"
  },
  {
    "name": "org.springframework.web.servlet.view.groovy.GroovyMarkupConfig"
  },
  {
    "name": "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.client.core.WebServiceTemplate"
  },
  {
    "name": "org.springframework.ws.config.annotation.DelegatingWsConfiguration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.ws.config.annotation.EnableWs",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.ws.config.annotation.WsConfigurationSupport",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.soap.server.endpoint.SimpleSoapExceptionResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.ws.transport.http.MessageDispatcherServlet"
  },
  {
    "name": "org.thymeleaf.engine.IterationStatusVar",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Aggregates",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Arrays",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Bools",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Calendars",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Conversions",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Dates",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.ExecutionInfo",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Ids",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Lists",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Maps",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Messages",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Numbers",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Objects",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Sets",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Strings",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.expression.Uris",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.extras.java8time.dialect.Java8TimeDialect",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.extras.java8time.expression.Temporals",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.extras.springsecurity5.util.Spring5VersionSpecificUtility",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.spring5.ISpringTemplateEngine"
  },
  {
    "name": "org.thymeleaf.spring5.SpringTemplateEngine",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.spring5.expression.Fields",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.expression.Mvc$NonSpring41MvcUriComponentsBuilderDelegate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.expression.Mvc$Spring41MvcUriComponentsBuilderDelegate",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.view.ThymeleafView",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.view.ThymeleafViewResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.standard.expression.AdditionExpression",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.standard.expression.RestrictedRequestAccessUtils$RestrictedRequestWrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.templatemode.TemplateMode"
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.templateresolver.ITemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.SooonApplication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.SpringConfig",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.config.AppConfig",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.config.HttpLogoutSuccessHandler",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.config.JwtAccessDeniedHandler",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.config.JwtAuthenticationEntryPoint",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.config.JwtFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.config.SecurityConfig",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.config.TokenProvider",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.controller.AccountController",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.dto.LoginRequestDto",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.dto.RegisterRequestDto",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.dto.TokenDto",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sungshin.sooon.model.Account",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.model.Account$AccountBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.model.RefreshToken",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.model.RefreshToken$RefreshTokenBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.repository.AccountRepository",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.repository.RefreshTokenRepository",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "sungshin.sooon.service.AccountService",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  }
]